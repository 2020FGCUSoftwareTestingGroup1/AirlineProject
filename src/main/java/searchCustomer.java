import com.toedter.calendar.JDateChooser;
import database.Database;
import database.IDatabase;
import model.Customer;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class searchCustomer extends JInternalFrame {
    private final IDatabase database = Database.getDatabase();

    /**
     * Creates new form addCustomer
     */
    public searchCustomer() {
        initComponents();
    }
    
    String path=null;
    byte[] userimage=null;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new JPanel();
        firstNameLabel = new JLabel();
        lastNameLabel = new JLabel();
        nicNoLabel = new JLabel();
        passportIdLabel = new JLabel();
        addressLabel = new JLabel();
        lastNameInput = new JTextField();
        firstNameInput = new JTextField();
        nicNoInput = new JTextField();
        passportIdInput = new JTextField();
        jScrollPane1 = new JScrollPane();
        addressInput = new JTextArea();
        customerIdLabel = new JLabel();
        jPanel2 = new JPanel();
        dateOfBirthLabel = new JLabel();
        txtdob = new JDateChooser();
        genderLabel = new JLabel();
        contactLabel = new JLabel();
        maleRadioButton = new JRadioButton();
        femaleRadioButton = new JRadioButton();
        contactInput = new JTextField();
        photoLabel = new JLabel();
        browseButton = new JButton();
        updateButton = new JButton();
        cancelButton = new JButton();
        customerIdInput = new JTextField();
        findButton = new JButton();

        rootPanel.setBackground(new java.awt.Color(51, 0, 255));

        firstNameLabel.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstNameLabel.setText("FirstName");

        lastNameLabel.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastNameLabel.setText("LastName");

        nicNoLabel.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11)); // NOI18N
        nicNoLabel.setForeground(new java.awt.Color(255, 255, 255));
        nicNoLabel.setText("Nic No");

        passportIdLabel.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11)); // NOI18N
        passportIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        passportIdLabel.setText("Passport ID");

        addressLabel.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(255, 255, 255));
        addressLabel.setText("Address");

        lastNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtlastnameActionPerformed(evt);
            }
        });

        passportIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtpassportActionPerformed(evt);
            }
        });

        addressInput.setColumns(20);
        addressInput.setRows(5);
        jScrollPane1.setViewportView(addressInput);

        GroupLayout jPanel1Layout = new GroupLayout(rootPanel);
        rootPanel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(firstNameLabel)
                                .addGap(47, 47, 47)
                                .addComponent(firstNameInput))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(addressLabel)
                                    .addComponent(passportIdLabel)
                                    .addComponent(nicNoLabel))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(passportIdInput)
                                    .addComponent(nicNoInput))))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addGap(48, 48, 48)
                        .addComponent(lastNameInput, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(nicNoLabel)
                    .addComponent(nicNoInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(passportIdLabel)
                    .addComponent(passportIdInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(addressLabel)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 62, GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        customerIdLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        customerIdLabel.setText("Customer ID");

        jPanel2.setBackground(new java.awt.Color(51, 0, 255));

        dateOfBirthLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateOfBirthLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel.setText("Date of Birth");

        genderLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender");

        contactLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        contactLabel.setForeground(new java.awt.Color(255, 255, 255));
        contactLabel.setText("Contact");

        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener((listener) -> setGenderRadio(true));

        femaleRadioButton.setText("Female");
        femaleRadioButton.addActionListener((listener) -> setGenderRadio(false));

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(dateOfBirthLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(genderLabel)
                            .addComponent(contactLabel))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(maleRadioButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(femaleRadioButton)
                                )
                            .addComponent(contactInput))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(dateOfBirthLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLabel)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(contactLabel)
                    .addComponent(contactInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        photoLabel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        browseButton.setText("Browse");
        browseButton.addActionListener(this::onBrowseClicked);

        updateButton.setText("Update");
        updateButton.addActionListener(this::onUpdateClicked);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(this::onCancelClicked);

        findButton.setText("Find");
        findButton.addActionListener(this::onFindClicked);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(customerIdLabel)
                        .addGap(29, 29, 29)
                        .addComponent(customerIdInput, GroupLayout.PREFERRED_SIZE, 147, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rootPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(photoLabel, GroupLayout.PREFERRED_SIZE, 250, GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(337, 337, 337)
                                .addComponent(browseButton, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(updateButton, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(findButton, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIdLabel)
                    .addComponent(customerIdInput, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(rootPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(photoLabel, GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(browseButton, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(updateButton, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void txtlastnameActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtlastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlastnameActionPerformed

    private void txtpassportActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtpassportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpassportActionPerformed

    private void onBrowseClicked(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {
            JFileChooser picchooser = new JFileChooser();
            picchooser.showOpenDialog(null);
            File pic = picchooser.getSelectedFile();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","png","jpg");
            picchooser.addChoosableFileFilter(filter);
            path= pic.getAbsolutePath();
            BufferedImage img;
            img = ImageIO.read(picchooser.getSelectedFile());
            ImageIcon imageIcon = new ImageIcon(new
            ImageIcon(img).getImage().getScaledInstance(250, 250, Image.SCALE_DEFAULT));
            photoLabel.setIcon(imageIcon);

            File image = new File(path);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos= new ByteArrayOutputStream();
            byte[] buff = new byte[1024];
            for(int readNum; (readNum=fis.read(buff)) !=-1 ; ) {
                baos.write(buff,0,readNum);
            }
            userimage=baos.toByteArray();
              
              
              
        } catch (IOException ex) {
            Logger.getLogger(addCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void onUpdateClicked(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        String id = customerIdInput.getText();
        String firstname = firstNameInput.getText();
        String lastname = lastNameInput.getText();
        String nic = nicNoInput.getText();
        String passport = passportIdInput.getText();
        String address = addressInput.getText();
        
        DateFormat da = new SimpleDateFormat("yyyy-MM-dd");
        String date = da.format(txtdob.getDate());
        String gender;
        
        if(maleRadioButton.isSelected()) {
            gender = "Male";
        } else {
            gender = "Female";
        }
        
         String contact = contactInput.getText();
         
        try {
            var customer = new Customer(
                    id, firstname, lastname, nic, passport,
                    address, date, gender, Integer.parseInt(contact), userimage
            );

            database.updateCustomer(customer);
            
            
            JOptionPane.showMessageDialog(null,"Registation Updated.");
            
            
        } catch (SQLException ex) {
            // TODO: Missing notification to user.
            Logger.getLogger(addCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void onCancelClicked(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        this.hide();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void onFindClicked(ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String id = customerIdInput.getText();

        try {
            var customer = database.getCustomer(id);

            if (customer == null) {
                JOptionPane.showMessageDialog(this, "Record not Found");
            } else {
                ImageIcon image = new ImageIcon(customer.getPhoto());
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(photoLabel.getWidth(), photoLabel.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);


                setGenderRadio(customer.getGender().equals("Male"));
                 
                firstNameInput.setText(customer.getFirstName().trim());
                lastNameInput.setText(customer.getLastName().trim());
                nicNoInput.setText(customer.getNicNo().trim());
                passportIdInput.setText(customer.getPassportId().trim());
                addressInput.setText(customer.getAddress().trim());
                contactInput.setText(String.valueOf(customer.getContactNumber()));
                txtdob.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(customer.getDob()));
                photoLabel.setIcon(newImage);
            }
        } catch (ParseException ex) {
            Logger.getLogger(searchCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void setGenderRadio(boolean isMale) {
        maleRadioButton.setSelected(isMale);
        femaleRadioButton.setSelected(!isMale);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton browseButton;
    private JButton updateButton;
    private JButton cancelButton;
    private JButton findButton;
    private JLabel firstNameLabel;
    private JLabel contactLabel;
    private JLabel lastNameLabel;
    private JLabel nicNoLabel;
    private JLabel passportIdLabel;
    private JLabel addressLabel;
    private JLabel customerIdLabel;
    private JLabel dateOfBirthLabel;
    private JLabel genderLabel;
    private JPanel rootPanel;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private JRadioButton maleRadioButton;
    private JRadioButton femaleRadioButton;
    private JTextArea addressInput;
    private JTextField contactInput;
    private JTextField customerIdInput;
    private JTextField firstNameInput;
    private JTextField lastNameInput;
    private JTextField nicNoInput;
    private JTextField passportIdInput;
    private JLabel photoLabel;
    // End of variables declaration//GEN-END:variables
    private JDateChooser txtdob;
}
