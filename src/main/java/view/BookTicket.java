package view;

import com.toedter.calendar.JDateChooser;
import database.Database;
import database.IDatabase;
import model.Customer;
import model.Flight;
import model.Ticket;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


public class BookTicket extends JInternalFrame {
    IDatabase database = Database.getDatabase();

    /**
     * Creates new form ticket
     */
    public BookTicket() {
        initComponents();
        autoID();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        txtsource = new JComboBox<>();
        txtsource.setName("flightSource");
        txtdepart = new JComboBox<>();
        txtdepart.setName("flightDepart");
        sourceLabel = new JLabel();
        departureLabel = new JLabel();
        searchFlightButton = new JButton();
        searchFlightButton.setName("searchFlightBTN");
        jScrollPane1 = new JScrollPane();
        searchResultTable = new JTable();
        searchResultTable.setName("searchResultTable");
        jLabel3 = new JLabel();
        txtticketno = new JLabel();
        jPanel3 = new JPanel();
        customerIdLabel = new JLabel();
        firstNameLabel = new JLabel();
        lastNameLabel = new JLabel();
        txtcustid = new JTextField();
        txtcustid.setName("customerIDbox");
        passportNumberLabel = new JLabel();
        txtfirstname = new JLabel();
        txtfirstname.setName("fNameLabel");
        txtlastname = new JLabel();
        txtlastname.setName("lNameLabel");
        txtpassport = new JLabel();
        txtpassport.setName("passportIDLabel");
        searchCustomerButton = new JButton();
        searchCustomerButton.setName("customerSearchBTN");
        jPanel2 = new JPanel();
        flightNumberLabel = new JLabel();
        flightNameLabel = new JLabel();
        departTimeLabel = new JLabel();
        ticketClassLabel = new JLabel();
        priceLabel = new JLabel();
        seatCountLabel = new JLabel();
        flightNumberText = new JLabel();
        flightNumberText.setName("flightNum");
        flightNameText = new JLabel();
        flightNameText.setName("flightName");
        txtdept = new JLabel();
        txtdept.setName("departTime");
        ticketClassCombobox = new JComboBox<>();
        txtprice = new JTextField();
        txtprice.setName("priceOfSeats");
        txtseats = new JSpinner();
        txtseats.setName("chooseNumSeats");
        bookTicketButton = new JButton();
        bookTicketButton.setName("bookTicketBTN");
        cancelTicketButton = new JButton();
        cancelTicketButton.setName("cancelBTN");
        txttotal = new JLabel();
        txttotal.setName("totalPrice");

        txtseats.setModel(new SpinnerNumberModel(0, 0, 100, 1));
        ((JSpinner.DefaultEditor) txtseats.getEditor()).getTextField().setEditable(false);

        jPanel1.setBorder(BorderFactory.createTitledBorder(null, "Select Country", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", Font.BOLD, 12))); // NOI18N

        txtsource.setModel(new DefaultComboBoxModel<>(new String[] { "India", "Srilanka", "Uk", "Usa", "Canada", "Chinna" }));

        txtdepart.setModel(new DefaultComboBoxModel<>(new String[] { "India\t", "Srilanka", "Uk", "Usa", "Canada", "Chinna" }));

        sourceLabel.setText("Source");

        departureLabel.setText("Departure");

        searchFlightButton.setText("Search");
        searchFlightButton.addActionListener(this::onSearchFlight);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtsource, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(txtdepart, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(sourceLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(departureLabel)
                .addGap(87, 87, 87))
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchFlightButton)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceLabel)
                    .addComponent(departureLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsource, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdepart, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(searchFlightButton)
                .addContainerGap())
        );

        searchResultTable.setModel(new DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Flight No", "Flight Name", "Source", "Departure", "Date", "Dep Time", "Arr Time", "Charge"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        searchResultTable.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                onTableLeftClick(evt);
            }
        });
        jScrollPane1.setViewportView(searchResultTable);

        jLabel3.setText("Ticket No");

        txtticketno.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtticketno.setForeground(new java.awt.Color(255, 0, 0));
        txtticketno.setText("Ticket NO");

        customerIdLabel.setText("Customer ID");

        firstNameLabel.setText("FirstName");

        lastNameLabel.setText("LastName");

        passportNumberLabel.setText("Passportno");

        txtfirstname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtfirstname.setForeground(new java.awt.Color(255, 0, 0));
        txtfirstname.setText("jLabel9");

        txtlastname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtlastname.setForeground(new java.awt.Color(255, 0, 0));
        txtlastname.setText("jLabel10");

        txtpassport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtpassport.setForeground(new java.awt.Color(255, 0, 0));
        txtpassport.setText("jLabel11");

        searchCustomerButton.setText("Search");
        searchCustomerButton.addActionListener(this::onSearchCustomer);

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(customerIdLabel)
                        .addGap(34, 34, 34)
                        .addComponent(txtcustid, GroupLayout.PREFERRED_SIZE, 151, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(searchCustomerButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(lastNameLabel)
                            .addComponent(passportNumberLabel))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtpassport)
                            .addComponent(txtlastname)
                            .addComponent(txtfirstname))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIdLabel)
                    .addComponent(txtcustid, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCustomerButton))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(txtfirstname))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(txtlastname))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(passportNumberLabel)
                    .addComponent(txtpassport))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        flightNumberLabel.setText("Flight no");

        flightNameLabel.setText("Filght Name");

        departTimeLabel.setText("Depart Time");

        ticketClassLabel.setText("Class");

        priceLabel.setText("Price");

        seatCountLabel.setText("Seats");

        flightNumberText.setFont(new java.awt.Font("Tahoma", Font.BOLD, 12)); // NOI18N
        flightNumberText.setForeground(new java.awt.Color(255, 0, 0));
        flightNumberText.setText("jLabel18");

        flightNameText.setFont(new java.awt.Font("Tahoma", Font.BOLD, 12)); // NOI18N
        flightNameText.setForeground(new java.awt.Color(255, 0, 0));
        flightNameText.setText("jLabel19");

        txtdept.setFont(new java.awt.Font("Tahoma", Font.BOLD, 12)); // NOI18N
        txtdept.setForeground(new java.awt.Color(255, 0, 0));
        txtdept.setText("jLabel20");

        ticketClassCombobox.setModel(new DefaultComboBoxModel<>(new String[] { "Economy", "Business" }));

        txtseats.addChangeListener(this::txtseatsStateChanged);

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(departTimeLabel)
                        .addComponent(ticketClassLabel, GroupLayout.Alignment.LEADING)
                        .addComponent(priceLabel, GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(flightNumberLabel)
                            .addComponent(flightNameLabel)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(seatCountLabel)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(flightNameText)
                            .addComponent(txtdept)
                            .addComponent(flightNumberText)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(ticketClassCombobox, 0, 116, Short.MAX_VALUE)
                            .addComponent(txtprice)
                            .addComponent(txtseats, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(flightNumberLabel)
                    .addComponent(flightNumberText))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(flightNameLabel)
                    .addComponent(flightNameText))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(departTimeLabel)
                    .addComponent(txtdept))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(ticketClassLabel)
                    .addComponent(ticketClassCombobox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(txtprice, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(seatCountLabel)
                    .addComponent(txtseats, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bookTicketButton.setText("Book");
        bookTicketButton.addActionListener(this::onBookFlight);

        cancelTicketButton.setText("Cancel");
        cancelTicketButton.addActionListener(this::onCancelTicket);

        txttotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txttotal.setForeground(new java.awt.Color(255, 0, 0));
        txttotal.setText("jLabel4");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtticketno)))
                        .addGap(41, 41, 41)
                        .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 534, GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(txttotal, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(bookTicketButton, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelTicketButton, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtticketno))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 213, GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(txttotal, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(bookTicketButton, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelTicketButton, GroupLayout.PREFERRED_SIZE, 41, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSearchFlight(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String source = txtsource.getSelectedItem().toString().trim();
        String depart = txtdepart.getSelectedItem().toString().trim();
        
         List<Flight> flights = database.searchFlightsBySourceAndDestination(source, depart);


         DefaultTableModel Df = (DefaultTableModel) searchResultTable.getModel();
         Df.setRowCount(0);

         for (var flight: flights) {
             Vector<String> v2 = new Vector<>();

              v2.add(flight.getId());
              v2.add(flight.getFlightName());
              v2.add(flight.getSource());
              v2.add(flight.getDepart());
              v2.add(flight.getDate());
              v2.add(flight.getDepartTime());
              v2.add(flight.getArriveTime());
              v2.add(flight.getFlightCharge());

             Df.addRow(v2);
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    
     public void autoID() {
         txtticketno.setText(database.getNextTicketId());
    }

    private void onSearchCustomer(ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String id = txtcustid.getText();

        Customer customer = database.getCustomer(id);

        if (customer == null) {
            JOptionPane.showMessageDialog(this, "Record not Found");
        } else {
            txtfirstname.setText(customer.getFirstName().trim());
            txtlastname.setText(customer.getLastName().trim());
            txtpassport.setText(customer.getPassportId().trim());
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void onTableLeftClick(MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
       DefaultTableModel Df = (DefaultTableModel) searchResultTable.getModel();
       
       int selectIndex = searchResultTable.getSelectedRow();
       
       
       flightNumberText.setText(Df.getValueAt(selectIndex, 0).toString());
       flightNameText.setText(Df.getValueAt(selectIndex, 1).toString());
       txtdept.setText(Df.getValueAt(selectIndex, 5).toString());
       txtprice.setText(Df.getValueAt(selectIndex, 7).toString());
       txtdate = Df.getValueAt(selectIndex,4).toString();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtseatsStateChanged(ChangeEvent evt) {//GEN-FIRST:event_txtseatsStateChanged
        // TODO add your handling code here:
        
        int price = Integer.parseInt(txtprice.getText());
        int qty = Integer.parseInt(txtseats.getValue().toString());
        
        int tot = price * qty;
        
        txttotal.setText(String.valueOf(tot));
        
        
        
    }//GEN-LAST:event_txtseatsStateChanged

    public boolean isFormValid() {
        String ticketid = txtticketno.getText();
        String flightid = flightNumberText.getText();
        String custid = txtcustid.getText();
        String flightclass = ticketClassCombobox.getSelectedItem().toString().trim();
        String price = txtprice.getText();
        String seats = txtseats.getValue().toString();
        String date = txtdate;

        return !ticketid.isBlank() && !flightid.isBlank() &&
                !custid.isBlank() && !flightclass.isBlank() && !price.isBlank() &&
                !seats.isBlank() && date != null;
    }

    private void onBookFlight(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (!isFormValid()) {
            JOptionPane.showMessageDialog(
                    this,
                    "All fields have not been filled",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        String ticketid = txtticketno.getText();
        String flightid = flightNumberText.getText();
        String custid = txtcustid.getText();
        String flightclass = ticketClassCombobox.getSelectedItem().toString().trim();
        String price = txtprice.getText();
        String seats = txtseats.getValue().toString();
        //DateFormat da = new SimpleDateFormat("yyyy-MM-dd");
        String date = txtdate;

        Ticket ticket = new Ticket(
                ticketid, flightid, custid,
                flightclass, Integer.parseInt(price),
                Integer.parseInt(seats), date
        );

        try {
            database.saveTicket(ticket);
            JOptionPane.showMessageDialog(null, "Ticket Booked");
        } catch (SQLException ex) {
            Logger.getLogger(addflight.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void onCancelTicket(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.hide();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel flightNameText;
    private JLabel flightNumberText;
    private JButton bookTicketButton;
    private JButton cancelTicketButton;
    private JButton searchFlightButton;
    private JButton searchCustomerButton;
    private JLabel sourceLabel;
    private JLabel flightNumberLabel;
    private JLabel flightNameLabel;
    private JLabel departTimeLabel;
    private JLabel ticketClassLabel;
    private JLabel priceLabel;
    private JLabel seatCountLabel;
    private JLabel departureLabel;
    private JLabel jLabel3;
    private JLabel customerIdLabel;
    private JLabel firstNameLabel;
    private JLabel lastNameLabel;
    private JLabel passportNumberLabel;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JScrollPane jScrollPane1;
    private JTable searchResultTable;
    private JComboBox<String> ticketClassCombobox;
    private JTextField txtcustid;
    private JComboBox<String> txtdepart;
    private JLabel txtdept;
    private JLabel txtfirstname;
    private JLabel txtlastname;
    private JLabel txtpassport;
    private JTextField txtprice;
    private JSpinner txtseats;
    private JComboBox<String> txtsource;
    private JLabel txtticketno;
    private JLabel txttotal;
    // End of variables declaration//GEN-END:variables
    private String txtdate;
}
